version: "3.9"

# Production (Swarm stack) with centralized env files (config/env/.env.prod)
# Deploy with:
#   ENVIRONMENT=prod VERSION=... docker stack deploy -c docker-compose.prod.yml mafia

# Общие переменные для сервисов (env_file и т.п.)
x-service-defaults: &svc_defaults
  env_file:
    - ./config/env/.env.prod

# Общие defaults для deploy (policy и т.д.)
x-deploy-defaults: &deploy_defaults
  restart_policy:
    condition: on-failure
    delay: 5s
    max_attempts: 3
    window: 30s

services:
  postgres:
    image: postgres:15-alpine
    <<: *svc_defaults
    volumes:
      - postgres_prod_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      <<: *deploy_defaults
      placement:
        constraints: ["node.role == manager"]

  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes
    <<: *svc_defaults
    volumes:
      - redis_prod_data:/data
    deploy:
      <<: *deploy_defaults

  rabbitmq:
    image: rabbitmq:3-management-alpine
    <<: *svc_defaults
    volumes:
      - rabbitmq_prod_data:/var/lib/rabbitmq
    ports:
      - target: 15672
        published: 15672
        protocol: tcp
        mode: ingress
    deploy:
      <<: *deploy_defaults

  backend:
    image: ${DOCKER_REGISTRY:-your-registry.com}/mafia-backend:${VERSION:-latest}
    <<: *svc_defaults
    depends_on:
      - postgres
      - redis
      - rabbitmq
    ports:
      - target: 8000
        published: 8000
        protocol: tcp
        mode: ingress
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000
    deploy:
      <<: *deploy_defaults
      replicas: 2
      resources:
        limits:
          cpus: "1.00"
          memory: 1024M
        reservations:
          cpus: "0.25"
          memory: 256M

  celery:
    image: ${DOCKER_REGISTRY:-your-registry.com}/mafia-backend:${VERSION:-latest}
    <<: *svc_defaults
    depends_on:
      - redis
      - rabbitmq
      - postgres
    command: celery -A app.core.celery:celery_app worker --loglevel=info
    deploy:
      <<: *deploy_defaults
      replicas: 2

  celery-beat:
    image: ${DOCKER_REGISTRY:-your-registry.com}/mafia-backend:${VERSION:-latest}
    <<: *svc_defaults
    depends_on:
      - redis
      - rabbitmq
      - postgres
    command: celery -A app.core.celery:celery_app beat --loglevel=info
    deploy:
      <<: *deploy_defaults
      replicas: 1

  voice:
    image: ${DOCKER_REGISTRY:-your-registry.com}/mafia-voice:${VERSION:-latest}
    <<: *svc_defaults
    ports:
      - target: 4443
        published: 4443
        protocol: tcp
        mode: ingress
      - target: 30000
        published: 30000
        protocol: udp
        mode: ingress
      - target: 30001
        published: 30001
        protocol: udp
        mode: ingress
      - target: 30002
        published: 30002
        protocol: udp
        mode: ingress
      - target: 30003
        published: 30003
        protocol: udp
        mode: ingress
      - target: 30004
        published: 30004
        protocol: udp
        mode: ingress
      - target: 30005
        published: 30005
        protocol: udp
        mode: ingress
      - target: 30006
        published: 30006
        protocol: udp
        mode: ingress
      - target: 30007
        published: 30007
        protocol: udp
        mode: ingress
      - target: 30008
        published: 30008
        protocol: udp
        mode: ingress
      - target: 30009
        published: 30009
        protocol: udp
        mode: ingress
    deploy:
      <<: *deploy_defaults
      replicas: 2

volumes:
  postgres_prod_data:
  redis_prod_data:
  rabbitmq_prod_data:
